from typing import List, Optional, Protocol
from library.book import Book
from library.user import User

class IBookRepository(Protocol):
    def add(self, book: Book) -> None: ...
    def get(self, isbn: str) -> Optional[Book]: ...
    def update(self, book: Book) -> None: ...
    def delete(self, isbn: str) -> None: ...
    def list_all(self) -> List[Book]: ...

class IUserRepository(Protocol):
    def add(self, user: User) -> None: ...
    def get(self, user_id: str) -> Optional[User]: ...
    def list_all(self) -> List[User]: ...

class ILoanRepository(Protocol):
    def issue(self, isbn: str, user_id: str, date: str) -> None: ...
    def return_book(self, isbn: str, user_id: str) -> None: ...
    def list_issued(self) -> List[str]: ...